services:
  db:
    image: postgres:13.2
    ports:
      - "6969:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 1s
      retries: 20
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    networks:
      - sirius

  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 10s
      retries: 4
    networks:
      - sirius

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
    networks:
      - sirius

  matchmaker:
    build:
      dockerfile: Dockerfile
      context: .
    command: python -m src.my_app.matchmaker
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - sirius

  game:
    build:
      dockerfile: Dockerfile
      context: .
    command: python -m src.my_app.game
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - sirius

  bot:
    build:
      dockerfile: Dockerfile
      context: .
    command: python -m src.my_app.bot
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - sirius

networks:
  sirius:
    driver: bridge
